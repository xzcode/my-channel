<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzcode.product.app.dao.product.ProductInfoMapper" >

	<!-- 基础结果集-->
    <resultMap id="BaseResultMap" type="com.xzcode.product.common.entitys.product.ProductInfo" >
        
		<!--  -->
			<id column="uid" property="uid"/>
		<!-- 商品分类 -->
			<result column="product_category_id" property="productCategoryId"/>
		<!-- 商品名称，最多64个字 -->
			<result column="product_title" property="productTitle"/>
		<!-- 商家价格，单位分 -->
			<result column="product_price" property="productPrice"/>
		<!-- 商品总数 -->
			<result column="product_total" property="productTotal"/>
		<!-- 商品库存 -->
			<result column="inventory" property="inventory"/>
		<!-- 是否上架[0 下架 no; 1 上架 yes] -->
			<result column="is_shelves" property="isShelves"/>
		<!-- 阅读限制[0 所有用户 user; 1 VIP VIP; 2 SVIP SVIP] -->
			<result column="limit_level" property="limitLevel"/>
		<!-- 审核状态[0 审核中 apply; 1 审核通过 pass; 2 审核拒绝 fail] -->
			<result column="status" property="status"/>
		<!-- 排序，数字越大越靠前 -->
			<result column="sort" property="sort"/>
		<!-- 查看数 -->
			<result column="read_num" property="readNum"/>
		<!-- 发布时间 -->
			<result column="create_date" property="createDate"/>
		<!-- 启用状态[0 禁用 no; 1 启用 yes] -->
			<result column="enabled" property="enabled"/>
    </resultMap>
    

    
<!-- ///////////////////////////// -->


	<!-- 表名 -->
  <sql id="Table_Name" >
    product_info
  </sql>
  
  <!-- 表别名 -->
  <sql id="Table_Alias_Name">
    pi
  </sql>
  
  <!-- 用于查询的表名 -->
  <sql id="Select_Table_Name" >
    	<include refid="Table_Name"/>
    as 
    	<include refid="Table_Alias_Name"/>
  </sql>

  
  <!-- 查询列sql -->
  <sql id="Base_Select_Column_List" >
  <trim prefix="" suffix="" suffixOverrides="," >
  			pi.uid,
  			pi.product_category_id,
  			pi.product_title,
  			pi.product_price,
  			pi.product_total,
  			pi.inventory,
  			pi.is_shelves,
  			pi.limit_level,
  			pi.status,
  			pi.sort,
  			pi.read_num,
  			pi.create_date,
  			pi.enabled,
	</trim>
  </sql>
  
  <!-- 根据id查询字句 -->
  <sql id="Uid_Where">
  	where pi.uid = #{uid}
  </sql>
  
   <!-- 根据id查询字句 用于update-->
  <sql id="Uid_Where_Update">
  	where uid = #{uid}
  </sql>
  
  
  <!-- 插入列sql -->
  <sql id="Insert_Column_Trim_List">
  		<trim prefix="(" suffix=")" suffixOverrides=",">
	  			<if test="uid != null" >
		    		uid,
		   		</if>
	  			<if test="productCategoryId != null" >
		    		product_category_id,
		   		</if>
	  			<if test="productTitle != null" >
		    		product_title,
		   		</if>
	  			<if test="productPrice != null" >
		    		product_price,
		   		</if>
	  			<if test="productTotal != null" >
		    		product_total,
		   		</if>
	  			<if test="inventory != null" >
		    		inventory,
		   		</if>
	  			<if test="isShelves != null" >
		    		is_shelves,
		   		</if>
	  			<if test="limitLevel != null" >
		    		limit_level,
		   		</if>
	  			<if test="status != null" >
		    		status,
		   		</if>
	  			<if test="sort != null" >
		    		sort,
		   		</if>
	  			<if test="readNum != null" >
		    		read_num,
		   		</if>
	  			<if test="createDate != null" >
		    		create_date,
		   		</if>
	  			<if test="enabled != null" >
		    		enabled,
		   		</if>
    	</trim>
  </sql>
  
  <!-- 插入值sql -->
  <sql id="Insert_Values_Trim_List">
  	<trim prefix="(" suffix=")" suffixOverrides="," >
	  			<if test="uid != null" >
		    		#{uid},
		   		</if>
	  			<if test="productCategoryId != null" >
		    		#{productCategoryId},
		   		</if>
	  			<if test="productTitle != null" >
		    		#{productTitle},
		   		</if>
	  			<if test="productPrice != null" >
		    		#{productPrice},
		   		</if>
	  			<if test="productTotal != null" >
		    		#{productTotal},
		   		</if>
	  			<if test="inventory != null" >
		    		#{inventory},
		   		</if>
	  			<if test="isShelves != null" >
		    		#{isShelves},
		   		</if>
	  			<if test="limitLevel != null" >
		    		#{limitLevel},
		   		</if>
	  			<if test="status != null" >
		    		#{status},
		   		</if>
	  			<if test="sort != null" >
		    		#{sort},
		   		</if>
	  			<if test="readNum != null" >
		    		#{readNum},
		   		</if>
	  			<if test="createDate != null" >
		    		#{createDate},
		   		</if>
	  			<if test="enabled != null" >
		    		#{enabled},
		   		</if>
    	</trim>
  </sql>
  
  <!-- 更新列sql -->
  <sql id="Update_Columns_Set_List">
  	<set> 		
      <trim prefix="" suffix="" suffixOverrides="," >
      			<if test="uid != null">
					uid = #{uid},
	    		</if>
      			<if test="productCategoryId != null">
					product_category_id = #{productCategoryId},
	    		</if>
      			<if test="productTitle != null">
					product_title = #{productTitle},
	    		</if>
      			<if test="productPrice != null">
					product_price = #{productPrice},
	    		</if>
      			<if test="productTotal != null">
					product_total = #{productTotal},
	    		</if>
      			<if test="inventory != null">
					inventory = #{inventory},
	    		</if>
      			<if test="isShelves != null">
					is_shelves = #{isShelves},
	    		</if>
      			<if test="limitLevel != null">
					limit_level = #{limitLevel},
	    		</if>
      			<if test="status != null">
					status = #{status},
	    		</if>
      			<if test="sort != null">
					sort = #{sort},
	    		</if>
      			<if test="readNum != null">
					read_num = #{readNum},
	    		</if>
      			<if test="createDate != null">
					create_date = #{createDate},
	    		</if>
      			<if test="enabled != null">
					enabled = #{enabled},
	    		</if>
      </trim>
    </set>
  </sql>
  
  <!-- ///////////////////////////// -->
  <select id="selectByPrimaryKey"  resultMap="BaseResultMap">
    select 
    	<include refid="Base_Select_Column_List" />
    from 
    	<include refid="Select_Table_Name" />
    	<include refid="Uid_Where"/>
  </select>
  
  
  
  <select id="list" resultMap="BaseResultMap">
    select 
    	<include refid="Base_Select_Column_List" />
    from 
    	<include refid="Select_Table_Name" />
  </select>
  
  
  <select id="count" resultType="int">
    	select 
    		count(*) as count 
    	from 
    		<include refid="Select_Table_Name" />
    </select>
    
    
  <delete id="deleteByPrimaryKey">
    delete from 
    	<include refid="Table_Name" />
    	<include refid="Uid_Where_Update"/>
  </delete>
  
  <insert id="insert"  >
    insert into 
       	<include refid="Table_Name" />
    	<include refid="Insert_Column_Trim_List"/>
    values 
    	<include refid="Insert_Values_Trim_List"/>
  </insert>
  
  <insert id="insertSelective" keyColumn="uid" keyProperty="uid" useGeneratedKeys="true" >
    insert into 
    	<include refid="Table_Name" />
    	<include refid="Insert_Column_Trim_List"/>
    values 
    	<include refid="Insert_Values_Trim_List"/>
  </insert>
  
  <update id="updateByPrimaryKey">
    update
    	<include refid="Table_Name" />
    	<include refid="Update_Columns_Set_List"/>
    	<include refid="Uid_Where_Update"/>
  </update>
  
  <update id="updateDelFlag">
    	update
    	<include refid="Table_Name" />
    	set
    		enabled = #{enabled}
    	<include refid="Uid_Where_Update"/>
	</update>
    
  
  <!-- ///////////////////////////// -->
  
  
  
 </mapper>
